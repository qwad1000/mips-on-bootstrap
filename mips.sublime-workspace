{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"parse",
				"parseInt〔function〕"
			],
			[
				"type",
				"typeof〔keyword〕"
			],
			[
				"fun",
				"function〔keyword〕"
			],
			[
				"pro",
				"programCounter"
			],
			[
				"comman",
				"commandHolder"
			],
			[
				"ad",
				"adress"
			],
			[
				"ke",
				"keys"
			],
			[
				"mem",
				"memory"
			],
			[
				"re",
				"registers"
			],
			[
				"va",
				"variants"
			],
			[
				"res",
				"response〔argument〕"
			],
			[
				"json",
				"jsonCode"
			],
			[
				"exe",
				"exerciseVar〔variable〕"
			],
			[
				"ex",
				"exerciseVar"
			],
			[
				"exer",
				"exercisePath"
			],
			[
				"cu",
				"commandsCount"
			],
			[
				"set",
				"setReadOnly"
			],
			[
				"is",
				"isEditing"
			],
			[
				"lo",
				"log"
			],
			[
				"loa",
				"loadInfo"
			],
			[
				"run",
				"runConvert"
			],
			[
				"j",
				"jsonTest"
			],
			[
				"ng-",
				"ng-selected	AngularJS"
			],
			[
				"op",
				"option	Tag"
			],
			[
				"ma",
				"margin"
			],
			[
				"do",
				"double"
			],
			[
				"regis",
				"registers"
			],
			[
				"comm",
				"commandHolder"
			],
			[
				"comma",
				"commandParser"
			],
			[
				"mar",
				"margin-bottom"
			],
			[
				"pad",
				"padding-bottom"
			],
			[
				"bo",
				"border-radius"
			],
			[
				"bor",
				"border-style"
			],
			[
				"con",
				"concatStr"
			],
			[
				"co",
				"concatStr"
			],
			[
				"h",
				"hlength"
			],
			[
				"memo",
				"memoryTableSize"
			],
			[
				"padd",
				"padding-left"
			],
			[
				"memor",
				"memoryShifts"
			],
			[
				"to",
				"toUpperCase"
			],
			[
				"ra",
				"ramMap"
			],
			[
				"retu",
				"return"
			],
			[
				"get",
				"getValue"
			],
			[
				"0x",
				"0x12"
			],
			[
				"ta",
				"text-align"
			],
			[
				"th",
				"thead	Tag"
			],
			[
				"col",
				"console"
			],
			[
				"par",
				"parseInt"
			],
			[
				"regi",
				"registerHolder"
			],
			[
				"se",
				"session"
			],
			[
				"val",
				"values"
			],
			[
				"ndc",
				"ng-checked	AngularJS"
			],
			[
				"ram",
				"ramHolder"
			],
			[
				"in",
				"input"
			],
			[
				"new",
				"newArr"
			],
			[
				"inde",
				"index"
			],
			[
				"ng-ch",
				"ng-checked	AngularJS"
			],
			[
				"ng",
				"ng-checked	AngularJS"
			],
			[
				"ng-re",
				"ng-repeat	AngularJS"
			],
			[
				"de",
				"demoCPU"
			],
			[
				"$sc",
				"$scope	AngularJS"
			],
			[
				"Re",
				"return"
			],
			[
				"$s",
				"$scope	AngularJS"
			],
			[
				"Loa",
				"loadInfo"
			],
			[
				"li",
				"link	Tag"
			],
			[
				"spl",
				"splitedCode"
			],
			[
				"cons",
				"console"
			],
			[
				"le",
				"length"
			],
			[
				"for",
				"forEach"
			],
			[
				"wi",
				"width"
			],
			[
				"ali",
				"vertical-align"
			],
			[
				"bo-co",
				"border-color"
			],
			[
				"border-col",
				"border-color"
			],
			[
				"border-",
				"border-style"
			],
			[
				"st",
				"style	Tag"
			],
			[
				"rect",
				"love.graphics.rectangle"
			],
			[
				"t",
				"true"
			],
			[
				"iup.",
				"iup.PPlotAdd"
			],
			[
				"plot",
				"plot.REDRAW"
			],
			[
				"iup",
				"iup.PPlotAdd"
			],
			[
				"req",
				"require"
			],
			[
				"err",
				"err"
			],
			[
				"else",
				"elseif	elseif cond then"
			],
			[
				"love.key",
				"love.keyreleased"
			],
			[
				"love.mo",
				"love.mousereleased"
			],
			[
				"move",
				"move_rt"
			],
			[
				"u",
				"u_0t"
			],
			[
				"file",
				"file_path"
			],
			[
				"u_",
				"u_1"
			],
			[
				"r",
				"real_u"
			],
			[
				"pri",
				"print_table"
			],
			[
				"fu",
				"full_table"
			],
			[
				"N",
				"N-1"
			],
			[
				"h1",
				"h1_2"
			],
			[
				"h2",
				"h2_2"
			],
			[
				"d",
				"document"
			]
		]
	},
	"buffers":
	[
		{
			"file": "res/emulator/mips_constants.js",
			"settings":
			{
				"buffer_size": 708,
				"line_ending": "Windows"
			}
		},
		{
			"file": "index-bootstrap.html",
			"settings":
			{
				"buffer_size": 5652,
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.html",
			"settings":
			{
				"buffer_size": 4792,
				"line_ending": "Windows"
			}
		},
		{
			"file": "res/mainController.js",
			"settings":
			{
				"buffer_size": 8155,
				"line_ending": "Windows"
			}
		},
		{
			"file": "res/emulator/utility.js",
			"settings":
			{
				"buffer_size": 3730,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Сергій/.WebStorm9/system/extLibs/http_maxcdn.bootstrapcdn.com_bootstrap_3.2.0_js_bootstrap.js",
			"settings":
			{
				"buffer_size": 60681,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var app = angular.module(\"MIPS-app\",[]);\n\napp.config(function($interpolateProvider) {\n	    $interpolateProvider.startSymbol('[$');\n	    $interpolateProvider.endSymbol('$]');\n});\n\nvar someEDXFounder = {};\nvar exerciseVar = -1;\nvar exercisePath = \"\";\n\napp.controller (\"testController\", function($scope, $http) {\n	var demoCPU = initDemoCPU();\n	var commandRegex = new RegExp(\"(add|addi|addiu|addu|and|andi|beq|bgez|bgezal|bgtz|blez|bltz|bltzal|bne|div|divu|j|jal|jr|lb|lui|lw|mfhi|mflo|mult|multu|noop|or|ori|sb|sll|sllv|slt|sltu|sltiu|sra|srl|srlv|sub|subu|sw|xor|xori)(\\\\s([+-]?0x[1-9A-F]+|[+-]?[1-9]+|(\\\\$(30|31|[1-2]?[0-9]|t[0-9]|s[0-8]|ra|zero|at|v[0-1]|a[0-3]|k0|k1|gp|sp)))){1,3}\");\n	$scope.codeArea = \"\";\n	$scope.registers = demoCPU.register.registerMap;\n	$scope.ram = demoCPU.ram;\n	$scope.registersName = registersName;\n	$scope.resultArea = \"\";\n	$scope.isEditing = true;\n	$scope.loadBtnText = \"Assemble & Load to CPU\";\n\n	\n	$scope.hexRegFmt = 'hex';\n	$scope.memoryShift = 0x12;\n\n	$scope.commandsCount = -1;\n	$scope.dividedRegisters = prepareRegistersTable(2, $scope.registers, $scope.registersName);\n	var memoryTableSize = {width: 8, height: 17}\n	$scope.memoryShifts = prepareMemoryTable($scope.memoryShift,memoryTableSize.height, memoryTableSize.width);\n	\n\n	// $http.get(exercisePath)\n	// .success( function (response) { \n	// 	$scope.exercise = response[exerciseVar]; \n	// }).error( function () {\n	// 	$scope.resultArea += \"Some error loading tests from\" + exercisePath + \"var:\" + exerciseVar; \n	// 	$scope.exercise = initialObject;\n	// });\n\n	// $scope.exercise = initialObject;\n	\n\n\n	someEDXFounder.getState = function () {\n		var jsonObject = {\n			\"code\":editor.getValue(),\n			\"exVar\": exerciseVar.toString(),\n			\"exPath\": exercisePath\n		};	\n		return JSON.stringify(jsonObject);\n	};\n\n	someEDXFounder.setState = function (jsonCode){\n		var result = JSON.parse(jsonCode);\n		editor.setValue(result[\"code\"]);\n		exerciseVar = parseInt(result[\"exVar\"]);\n		exercisePath = result[\"exPath\"];\n		console.log(exerciseVar);\n		console.log(exercisePath);\n		\n		$http.get(exercisePath)\n		.success( function (response) { \n			$scope.exercise = response[exerciseVar]; \n		}).error( function () {\n			$scope.resultArea += \"Some error loading tests from\" + exercisePath + \"var:\" + exerciseVar; \n			$scope.exercise = initialObject;\n		});\n	};\n\n	someEDXFounder.gradeFunction = function () {\n		console.log($scope.exercise.tests);\n		var count = $scope.exercise.tests.length;\n		var goodCount = 0;\n		for (var id=0;id<count;id++){\n			var test = $scope.exercise.tests[id];\n			console.log(test.passed);\n			if (test.passed != false){\n				$scope.testClick(id);\n			}\n			if (test.passed == true){\n				goodCount = goodCount + 1;\n			}\n		}\n		var jsonResult = {\n			\"count\": count,\n			\"goodCount\":goodCount\n		};\n		console.log(jsonResult);\n		return JSON.stringify(jsonResult);\n	};\n\n	function prepareRegistersTable(columns, arr, names){\n		var newArr = [];\n		var newlength = arr.length/columns;\n		\n		for(var i=0; i<newlength; i++){ //fixme: if columns is odd\n			var newnewArr = []\n			for(var j=0; j<columns; j++){\n				var index = i+newlength*j;\n				var obj = {name:names[index], indx:index};\n				newnewArr.push(obj);\n			}\n			newArr.push(newnewArr);\n		}\n		return newArr;\n	}\n\n	$scope.returnRegister = function(index, fmt){\n		if(fmt=='hex'){\n			return \"0x\" + $scope.registers[index].toString(16).toUpperCase();		\n		}\n		return $scope.registers[index];\n	}\n\n	function prepareMemoryTable(shift, rows, cols){\n		if(typeof shift == 'string'){\n			shift = parseInt(shift)\n		}\n		var arr = [];\n		for(var i=0; i<rows; i++){\n			var arr2 = [];\n			for(var j=0; j<cols; j++){\n				// var v = $scope.ram.ramMap[shift + i*cols + j];\n				// if(typeof v == 'undefined'){\n				// 	v = 0;					\n				// }\n				var num = shift + i*cols + j;\n				arr2.push(num);\n			}\n			arr.push(arr2);\n		}\n		return arr;\n	}\n\n	$scope.returnMemoryValue = function (index, fmt){\n		//fixme ???\n		var m = $scope.ram.ramMap[index];\n		if(typeof m == 'undefined'){\n			m = 0;\n		}\n		if(fmt == 'hex'){\n			m = m.toString(16).toUpperCase();\n			m = HexToFillHex(m, 2);\n		}\n		return m;\n	}\n\n	$scope.changeMemoryShift = function(){\n		$scope.memoryShifts = prepareMemoryTable($scope.memoryShift,memoryTableSize.height, memoryTableSize.width);\n	}\n\n	$scope.loadInfo = function (){\n		if($scope.isEditing){\n			$scope.resultArea = \"\";\n			$scope.codeArea = editor.getValue();\n			var operations_list = $scope.codeArea.split('\\n');\n			$scope.commandsCount = 0;\n\n			for(var i=0; i<operations_list.length; i++){\n				var value = operations_list[i].trim();\n				if (!commandRegex.test(value)){\n					alert(\"У цьому рядку\\n\" + value+\"\\nє помилка. Правда!\");\n					return;\n				}\n				if(value.length > 0){\n					var indexOf = value.indexOf(\":\");\n					if (indexOf != -1) {\n						var label = value.substring(0, indexOf);\n						demoCPU.commandParser.commandHolder.addLabel(label);\n						var command = value.substring(indexOf + 1);\n						if (command.length > 0) {\n							value = command;\n						} else {\n							return;\n						}\n					}\n					var binResult = demoCPU.command(value);\n					console.log(binResult);\n					$scope.commandsCount++;\n					$scope.resultArea += BinToViewBin(binResult) + \"\\n\";\n				}\n			}\n			$scope.isEditing = false;\n			$scope.loadBtnText = \"Return to code editor\";\n			editor.setReadOnly(true);\n		}else{ //fixme: memory leaks??? todo: command deleting\n			demoCPU.commandParser.commandHolder.clear();\n			$scope.isEditing = true;\n			$scope.loadBtnText = \"Assemble & Load to CPU\";\n			editor.setReadOnly(false);\n			$scope.commandsCount = -1;\n		}\n\n	}\n	$scope.runConvert = function () {\n		for(var i=0; i<$scope.commandsCount; i++){\n			demoCPU.nextCommand();\n		}\n		$scope.commandsCount = 0;\n		console.log(\"состояние регистров под конец работы:\");\n		console.log(demoCPU.register.registerMap);\n		console.log(demoCPU.ram.ramMap);\n	}\n	\n	$scope.runStep = function () {\n		if($scope.commandsCount>0){\n			demoCPU.nextCommand();\n			editor.session.clearBreakpoints();\n			var rows = editor.session.getLength(); //fixme: indexes may be wrong if delete empty rows in ediotr\n			editor.session.setBreakpoint(rows - $scope.commandsCount);\n			$scope.commandsCount--;\n		}\n	}\n	$scope.reset = function (){//todo\n		demoCPU = {};\n		demoCPU = initDemoCPU();\n		editor.session.clearBreakpoints();\n		$scope.registers = demoCPU.register.registerMap;\n		$scope.ram = demoCPU.ram;\n		$scope.isEditing = true; //crunch;\n		$scope.commandsCount = -1;\n		$scope.loadInfo();\n\n		console.log('mips cpu reseted');\n	}\n\n	$scope.testClick = function (id){\n		$scope.reset();\n		var test = $scope.exercise.tests[id];\n		var k = Object.keys(test.start);\n		angular.forEach(test.start, function (item, i, arr){\n			var key = Object.keys(item)[0];\n			var code = registerCode[key];\n			var val = item[key];\n			demoCPU.register.set(code, val);\n		});\n\n		$scope.runConvert();\n\n		var testPassed = true;\n\n		angular.forEach(test.end, function (item, i, arr){\n			var key = Object.keys(item)[0];\n			var code = registerCode[key];\n			var val = item[key];\n			var currentVal = demoCPU.register.get(code);\n			if(currentVal != val){\n				testPassed = false;\n			}\n		});\n\n		test.passed = testPassed;//todo\n	}\n});",
			"file": "/C/Users/Сергій/Documents/GitHub/MIPSXBlock/exp/static/js/src/anCont.js",
			"file_size": 7443,
			"file_write_time": 130682102138152414,
			"settings":
			{
				"buffer_size": 7119,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"rei",
				"Indentation: Reindent Lines"
			],
			[
				"re",
				"Indentation: Reindent Lines"
			],
			[
				"side",
				"View: Toggle Side Bar"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"toggle mi",
				"View: Toggle Minimap"
			],
			[
				"sub",
				"Sublimall: Upload"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"encod",
				"Package Control: Upgrade Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"fix co",
				"GutterColor: Fix Current Color Scheme"
			],
			[
				"gutt",
				"Preferences: GutterColor Settings – User"
			],
			[
				"ma",
				"Set Syntax: Markdown"
			],
			[
				"js",
				"Set Syntax: JSON"
			],
			[
				"jso",
				"Set Syntax: JSON"
			],
			[
				"reinde",
				"Indentation: Reindent Lines"
			],
			[
				"mar",
				"Set Syntax: Markdown"
			],
			[
				"map",
				"View: Toggle Minimap"
			],
			[
				"angu",
				"Set Syntax: HTML (Angular.js)"
			],
			[
				"Snippet: bs3-radi",
				"Snippet: bs3-input-radio"
			],
			[
				"togg",
				"View: Toggle Side Bar"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"sidea",
				"View: Toggle Side Bar"
			],
			[
				"Snippet: ht",
				"Snippet: html"
			],
			[
				"html",
				"Set Syntax: HTML (Angular.js)"
			],
			[
				"ang",
				"Set Syntax: HTML (Angular.js)"
			],
			[
				"love",
				"Set Syntax: Lua (Love)"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"set love",
				"Set Syntax: Lua (Love)"
			],
			[
				"buil",
				"Build: Run"
			],
			[
				"run",
				"Build: Run"
			],
			[
				"ru",
				"Build: Run"
			],
			[
				"bu",
				"Build: Build"
			],
			[
				"bui",
				"Build: Run"
			],
			[
				"set Sy lu",
				"Set Syntax: Lua"
			],
			[
				"set",
				"Set Syntax: Lua"
			],
			[
				"lvoe",
				"Snippet: self.var = var or default"
			],
			[
				"Love",
				"Build: Love2D-Run"
			],
			[
				"Love2D",
				"Build: Love2D"
			],
			[
				"pre",
				"Preferences: Settings - Default"
			],
			[
				"lateX",
				"LaTeXing: Open Default Preferences"
			],
			[
				"can",
				"Build: Cancel"
			],
			[
				"",
				"Build: Run"
			],
			[
				"toggle",
				"View: Toggle Menu"
			],
			[
				"set lua",
				"Set Syntax: Lua"
			],
			[
				"paca",
				"Package Control: Remove Package"
			],
			[
				"ju",
				"LaTeXing: Jump To PDF"
			],
			[
				"che",
				"LaTeXing: Check System"
			],
			[
				"sideb",
				"View: Toggle Side Bar"
			],
			[
				"late",
				"LaTeXing: Open Default Preferences"
			],
			[
				"tex",
				"LaTeXing: Open PDF"
			],
			[
				"key",
				"Preferences: Key Bindings - Default"
			],
			[
				"m",
				"View: Toggle Menu"
			],
			[
				"sta",
				"View: Toggle Status Bar"
			],
			[
				"stat",
				"View: Toggle Status Bar"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			]
		],
		"width": 512.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/workspace/web/mips",
		"/E/workspace/web/mips/res",
		"/E/workspace/web/mips/res/emulator"
	],
	"file_history":
	[
		"/E/workspace/web/mips/res/emulator/mips.js",
		"/D/utility.js",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/Sublimall/Sublimall.sublime-settings",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/SublimeCodeIntel/Default (Windows).sublime-keymap",
		"/E/workspace/web/mips/todo.md",
		"/E/workspace/web/mips/vars1.json",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/User/Sublimall.sublime-settings",
		"/E/workspace/web/mips/res/mainController.js",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/BracketHighlighter/bh_core.sublime-settings",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/User/ColorHighlighter.sublime-settings",
		"/E/workspace/web/mips/css/new-ide.css",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/AutoFileName/autofilename.sublime-settings",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/Color Highlighter/ColorHighlighter.sublime-settings",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/Color Highlighter/Default.sublime-keymap",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/User/GutterColor.sublime-settings",
		"/C/Users/Сергій/Downloads/doomlegacy_1.44_alpha5_win32/doomlegacy_1.44_alpha5_win32/legacy.wad",
		"/C/Users/Сергій/Documents/GitHub/MIPSXBlock/exp/static/vars1.json",
		"/C/Users/Сергій/Documents/GitHub/MIPSXBlock/exp/static/js/src/anCont.js",
		"/C/Users/Сергій/Documents/GitHub/MIPSXBlock/exp.html",
		"/C/Users/Сергій/Desktop/d74092e5a39f4812bee5aedeab133d0d.xml",
		"/C/Users/Сергій/Documents/GitHub/MIPSXBlock/exp/static/js/src/exp.js",
		"/E/workspace/web/mips/index.html",
		"/E/workspace/web/mips/index-bootstrap.html",
		"/E/workspace/web/mips/.gitignore",
		"/E/workspace/web/mips/.gitattributes",
		"/C/Users/Сергій/Downloads/apptitune.apptitune(1)/res/layout/activity_fullscreen.xml",
		"/C/Users/Сергій/Downloads/apptitune.apptitune(1)/AndroidManifest.xml",
		"/C/Users/Сергій/AppData/Local/Temp/7zOF4E0.tmp/anCont.js",
		"/C/Users/C69E~1/AppData/Local/Temp/7zOC255.tmp/anCont.js",
		"/C/Users/Сергій/Documents/GitHub/MIPSXBlock/exp/static/css/exp.css",
		"/C/Users/Сергій/Documents/GitHub/MIPSXBlock/exp/static/html/exp.html",
		"/C/Users/Сергій/Documents/GitHub/MIPSXBlock/exp/static/js/src/emulator/mips.js",
		"/C/Users/Сергій/Documents/GitHub/MIPSXBlock/exp/static/js/src/emulator/utility.js",
		"/E/workspace/web/mips/res/tests/test1.json",
		"/C/Users/Сергій/Documents/GitHub/MIPSXBlock/setup.py",
		"/E/workspace/web/mips/res/src-noconflict/ace.js",
		"/E/workspace/web/mips/registers_table.html",
		"/C/Users/Сергій/Documents/GitHub/MIPSXBlock/exp/exp.py",
		"/E/workspace/web/mips/res/example.js",
		"/E/workspace/web/mips/res/src-noconflict/ext-modelist.js",
		"/E/workspace/web/mips/tomo.md",
		"/E/backup/2014-06-22/Documents/Toad Data Modeler/GeneratedScripts/Generated.SQL",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/E/workspace/lua/LOVE/hex/hex.sublime-project",
		"/E/workspace/web/mips/angular-example.html",
		"/E/workspace/web/mips/res/emulator/utility.js",
		"/E/workspace/web/mips/css/ide.css",
		"/E/workspace/web/mips/res/emulator/controller.js",
		"/E/workspace/web/first_/stylesheets/style.css",
		"/C/Users/Сергій/Downloads/apptitune.apptitune/AndroidManifest.xml",
		"/E/workspace/java/kpt/src/com/qwad1000/kpt/MainActivity.java",
		"/E/workspace/web/first_/index.html",
		"/C/Users/Сергій/Documents/Syberia Saves/Config.dat",
		"/E/workspace/lua/LOVE/hex/main.lua",
		"/C/Users/Сергій/Desktop/activity_main.xml",
		"/D/out-windows_lab4/run.bat",
		"/C/Users/Сергій/Desktop/build.prop",
		"/E/workspace/lua/LOVE/hello_world/main.lua",
		"/E/workspace/lua/LOVE/hello_world/hello_world.sublime-project",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Packages/User/MyLove.sublime-build",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Installed Packages/MyLuaLove.sublime-build",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Installed Packages/Love.sublime-build",
		"/C/Users/Сергій/AppData/Roaming/Sublime Text 3/Installed Packages/SublimeLove.sublime-package",
		"/D/workspace/vs/ConsoleApplication1/ConsoleApplication1/Device.cs",
		"/D/workspace/vs/ConsoleApplication1/ConsoleApplication1/Sensor.cs",
		"/D/workspace/qtWorkspace/oop/lab3/device.cpp",
		"/D/workspace/texmaker/labs/NM/lab_9_subl/lab_9_nm_h2____.lua",
		"/C/Program Files/Lua/5.1/examples/iup/pplot.wlua",
		"/C/Program Files/Lua/5.1/examples/iup/misc/simple-pplot.wlua",
		"/C/Program Files/Lua/5.1/examples/iup/misc/iupxpplot.lua",
		"/C/Program Files/Lua/5.1/examples/iup/misc/pplot3.wlua",
		"/D/workspace/lua/lab_9_nm_h1h2_.lua",
		"/D/workspace/lua/LOVE/hello_world/main.lua",
		"/D/workspace/qtWorkspace/oop/lab4/lab_4oop_stl.tex",
		"/D/workspace/qtWorkspace/oop/lab2_oop.tex",
		"/C/Users/qwad1000/AppData/Roaming/Sublime Text 2/Packages/Lua/Lua.tmLanguage",
		"/C/Users/qwad1000/AppData/Roaming/Sublime Text 2/Packages/Lua/Comments.tmPreferences",
		"/C/Users/qwad1000/AppData/Roaming/Sublime Text 2/Packages/User/Lua_qwad1000.sublime-build",
		"/C/Users/qwad1000/AppData/Roaming/Sublime Text 2/Packages/User/LuaLove_qwad1000.sublime-build",
		"/D/workspace/lua/LOVE/hello world/main.lua",
		"/C/Users/qwad1000/AppData/Roaming/Sublime Text 2/Packages/Lua Love/LuaLove.sublime-settings",
		"/C/Users/qwad1000/AppData/Roaming/Sublime Text 2/Packages/User/LuaLove.sublime-settings",
		"/C/Users/qwad1000/AppData/Roaming/Sublime Text 2/Packages/Lua Love/LuaLove.sublime-build",
		"/C/Users/qwad1000/AppData/Roaming/Sublime Text 2/Packages/Lua Love/LuaLove.sublime-completions",
		"/C/Users/qwad1000/AppData/Roaming/Sublime Text 2/Packages/Lua Love/Main.sublime-menu",
		"/D/workspace/lua/nm_kr2/lab_9_nm_h1_parabol.lua",
		"/D/workspace/lua/nm_kr2/lab_9_nm_hyperbol.lua",
		"/C/Users/qwad1000/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/qwad1000/AppData/Roaming/Sublime Text 2/Packages/LaTeXing/LaTeXing.sublime-settings",
		"/D/workspace/lua/LOVE/hello world/hello_LOVE.lua",
		"/D/workspace/lua/nm_kr2/lab_9_nm_hyperbol",
		"/D/workspace/lua/nm_kr2/lab_9_nm_h2.lua",
		"/D/workspace/lua/lab_9_nm_h1h2.lua",
		"/D/workspace/lua/lab_9_nm__.lua",
		"/D/workspace/lua/lab_9_nm_h^2.lua"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\\{\\{(.*)\\}\\}",
			"<td>\\{\\{",
			"</td>\\n</td>",
			"<td>{{  }}</td>",
			"</tr>",
			"<td align=\"right\">",
			"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
			"ram",
			"index",
			"DexToBin",
			"programCounter",
			"initCommandParser",
			"getRegisterCode",
			"registersName",
			"\"m\":\\{(.*\\n.*)\\}",
			")",
			"(",
			"(\\(*\\))",
			"$http",
			"mult",
			"exercisePath",
			"initCommandRamHolder",
			"initCommandParser",
			"initRegisterHolder",
			"demo",
			"initCommandRamHolder",
			"demo",
			"to",
			"setdex",
			"}}",
			"{{",
			"command",
			"divided",
			"dextoFillBin",
			"command",
			"sw",
			".substring",
			"conta",
			"ramH",
			"commandHolder",
			"convertds",
			"contains",
			"read",
			"err",
			"key"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"<b>\\{\\{ \\1 \\}\\}</b>",
			"<td style='text: bold'>",
			"</td>\\n</tr>",
			"\\n</td>",
			"<td>{{ DexToFillComplementBin([],8) }}</td>",
			"\\t<td>{{  }}</td>\\n</td>",
			"\\t<td>{{  }}</td>\\n</tr>",
			"<td>",
			"",
			"startIndex",
			"\"registers\":\\{\\n\\t \\1 \\n\\},\\n\\t\\t\\t\\t\\t\\t \"memory\": \\{\\n\"start\": null, \\n\\t\\t\\t\\t\\t\\t\\t\"end\": null\\n\\}",
			"\"registers\":\\{\\n\\t \\1 \\n\\},\\n\\t\\t\\t\\t\\t\\t \"memory\": \\{\"start\": null, \\n\\t\\t\\t\\t\\t\\t\\t\"end\": null\\}",
			"\"registers\":\\{\\n\\t \\1 \\n\\}\\},\\n\\t\\t\\t\\t\\t\\t \"memory\": \\{\"start\": null, \\n\\t\\t\\t\\t\\t\\t\\t\"end\": null\\}",
			"\"registers\":\\{\\n\\t \\1 \\n\\},\\n\\t\\t\\t\\t\\t\\t \"memory\": \\{\"start\": null, \\n\\t\\t\\t\\t\\t\\t\\t\"end\": null\\}",
			"\"registers\":\\{\\n\\t \\1 \\n\\},\\n\\t\\t\\t\\t\\t\\t \"memory\": \\{\"start\": null \\n\\t\\t\\t\\t\\t\\t\\t\"end\": null\\}",
			"\"registers\":\\{\\n\\t \\1 \\n\\}\\n\\t\\t\\t\\t\\t\\t \"memory\": \\{\"start\": null \\n\"end\": null\\}",
			"\\t\\t\\t\\t\\t\\t\"registers\":\\{\\n\\t \\1 \\n\\}\\n\\t\\t\\t\\t\\t\\t \"memory\": \\{\"start\": null \\n\"end\": null\\}",
			"\"registers\":\\{\\n\\t \\1 \\n\\}",
			"\"registers\":\\{\\n\\t \\& \\n\\}",
			"\"registers\":\\{\\n\\t & \\n\\}",
			"}",
			"\"m\":{",
			"asdf",
			"exerciseVar",
			"$]",
			"[$"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "res/emulator/mips_constants.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 708,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "index-bootstrap.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5652,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 773.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4792,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 246.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "res/mainController.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8155,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1736.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "res/emulator/utility.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3730,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1145.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Users/Сергій/.WebStorm9/system/extLibs/http_maxcdn.bootstrapcdn.com_bootstrap_3.2.0_js_bootstrap.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 60681,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/Users/Сергій/Documents/GitHub/MIPSXBlock/exp/static/js/src/anCont.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7119,
						"regions":
						{
						},
						"selection":
						[
							[
								5530,
								5530
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2367.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 174.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.latex_log":
	{
		"height": 133.0
	},
	"project": "mips.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"res\\emulator\\mips.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 416.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 187.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
